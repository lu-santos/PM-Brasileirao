/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package visao;

import controlador.EquipeEvent;
import controlador.RodadaEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;


/**
 *
 * @author Lucianna
 */
public class Importar extends javax.swing.JInternalFrame {

    private EquipeEvent equipeEvento;
    private final String nomeArquivoEquipe = "equipes.txt";
    private String campeonatoSelecionado;
    private String caminhoDoArquivoEquipe;
    
    private final DefaultListModel addArquivosNaListaModelRodada = new DefaultListModel();
    private RodadaEvent rodadaEvento;
    private String nomeArquivoRodada;
    private final DefaultListModel addArquivosNaListModelImportados = new DefaultListModel();
    private int numeroRodadaAtual;
    private final List<String> rodadasImportadas = new ArrayList<>();
    
    private final String importacaoComSucesso = "Arquivo importado com sucesso!";
    private final String ErroNaimportacao = "Erro ao importar arquivo!";
    
    /**
     * Creates new form Importar
     */
    public Importar() {
        initComponents();
        
        selecionarCampeonato.addItem("2013");
        selecionarCampeonato.setSelectedIndex(0);
        
        campeonatoSelecionado = (String) selecionarCampeonato.getSelectedItem();
        selecionarEquipe.addItem(nomeArquivoEquipe);
        selecionarEquipe.setSelectedIndex(0);

        popularListaDeRodada();       
    }
    
    private void popularListaDeRodada() {
        String arquivosRodada;
        
        for(int i = 1; i < 39; i++){
            arquivosRodada = "Rodada" + " " + i;
            addArquivosNaListaModelRodada.addElement(arquivosRodada);
        }
        listaArquivoRodadas.setModel(addArquivosNaListaModelRodada);

        if(nomeArquivoRodada == null)
            listaArquivoRodadas.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        selecionarCampeonato = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        btnImportarEquipe = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaArquivoRodadas = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaRodadasImportadas = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        btnImportarRodada = new javax.swing.JButton();
        selecionarEquipe = new javax.swing.JComboBox();

        setTitle("Importar");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Campeonato");

        selecionarCampeonato.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Equipe");

        btnImportarEquipe.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnImportarEquipe.setText("Importar Equipe");
        btnImportarEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarEquipeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Rodada");

        listaArquivoRodadas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        listaArquivoRodadas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaArquivoRodadas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listaArquivoRodadas);

        listaRodadasImportadas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        listaRodadasImportadas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(listaRodadasImportadas);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText(">>");

        btnImportarRodada.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnImportarRodada.setText("Importar Rodada");
        btnImportarRodada.setEnabled(false);
        btnImportarRodada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarRodadaActionPerformed(evt);
            }
        });

        selecionarEquipe.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        selecionarEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarEquipeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(selecionarEquipe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImportarEquipe, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImportarRodada, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(selecionarCampeonato, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selecionarCampeonato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(selecionarEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnImportarEquipe)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addComponent(btnImportarRodada)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportarEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarEquipeActionPerformed
        try {
            campeonatoSelecionado = (String) selecionarCampeonato.getSelectedItem();
            caminhoDoArquivoEquipe = "arquivos_de_leitura\\" + campeonatoSelecionado + "\\equipes.txt";
           
            equipeEvento = new EquipeEvent(caminhoDoArquivoEquipe);
            equipeEvento.ImportarEquipe();  
            
            FuncoesPadroes.exibirMensagem(getContentPane(), importacaoComSucesso);
            btnImportarRodada.setEnabled(true);
            addNaListModelRodadasNoBanco();
        } catch (Exception ex) { 
            FuncoesPadroes.exibirMensagem(getContentPane(), ErroNaimportacao);    
            Logger.getLogger(ImportarEquipe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImportarEquipeActionPerformed

    private void addNaListModelRodadasNoBanco() throws Exception {
        RodadaEvent re = new RodadaEvent();
        List<Integer> listaDeNumeros = re.getRodadasNoBanco();
        for (int i = 0; i < listaDeNumeros.size(); i++) {
            addNaListaModelDeImportacao(listaDeNumeros.get(i));
        }
    }

    private void selecionarEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarEquipeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selecionarEquipeActionPerformed

    private void btnImportarRodadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarRodadaActionPerformed
        if (listaArquivoRodadas.getSelectedIndex() > 35)     
            FuncoesPadroes.exibirMensagem(getContentPane(), "Não exite arquivo para o item selecionado!");
        
  /*      if(nomeArquivoRodada == null && listaArquivoRodadas.getSelectedIndex() != 0){
            FuncoesPadroes.exibirMensagem(getContentPane(), "Comece a importação pela primeira rodada");
        }*/
   //     if(listaArquivoRodadas.getSelectedIndex() == 0 || listaArquivoRodadas.getSelectedIndex() == (numeroRodadaAtual+1) && !addArquivosNaListModelImportados.isEmpty()){    
            try {
                int numeroDaRodada = NumeroRodada(String.valueOf(listaArquivoRodadas.getSelectedValue()));
                addNaListaModelDeImportacao(numeroDaRodada);
                importarRodada(numeroDaRodada);
                FuncoesPadroes.exibirMensagem(getContentPane(), importacaoComSucesso);
            } catch (Exception ex) {
                Logger.getLogger(ImportarRodada.class.getName()).log(Level.SEVERE, null, ex);
                FuncoesPadroes.exibirMensagem(getContentPane(), ErroNaimportacao); 
            }
   //     }
   //     else if(listaArquivoRodadas.getSelectedIndex() != numeroRodadaAtual+1)
   //         FuncoesPadroes.exibirMensagem(getContentPane(), "Escolha uma rodada sucessora imediata.");
    }
    
    private int NumeroRodada(String rodada) {
        String[] partes = rodada.split(" ");
        return Integer.parseInt(partes[1]);
    }

    private void addNaListaModelDeImportacao(int numeroDaRodada) {
        nomeArquivoRodada = "Rodada " + numeroDaRodada;
        addRodadasImportadasNaLista(nomeArquivoRodada);
        for(String nomeArquivoImportado : getRodadasImportadas()){
            if(nomeArquivoImportado != null && !addArquivosNaListModelImportados.contains(nomeArquivoImportado))
                addArquivosNaListModelImportados.addElement(nomeArquivoImportado);
        }
        listaRodadasImportadas.setModel(addArquivosNaListModelImportados);
    }//GEN-LAST:event_btnImportarRodadaActionPerformed

    private void importarRodada(int numeroDaRodada) throws Exception, NumberFormatException {
        System.out.println("numero da rodada:" + numeroDaRodada);
        nomeArquivoRodada = "arquivos_de_leitura\\" + campeonatoSelecionado + "\\rodada" + numeroDaRodada + ".txt";
        rodadaEvento = new RodadaEvent(nomeArquivoRodada, Integer.valueOf(campeonatoSelecionado));
        rodadaEvento.ImportarRodada();
        numeroRodadaAtual = listaArquivoRodadas.getSelectedIndex();
    }

    private void addRodadasImportadasNaLista(String rodada){
        if(rodadasImportadas.size() < 39)
            rodadasImportadas.add(rodada);
    }
    
    private List<String> getRodadasImportadas(){
        return rodadasImportadas;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImportarEquipe;
    private javax.swing.JButton btnImportarRodada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listaArquivoRodadas;
    private javax.swing.JList listaRodadasImportadas;
    private javax.swing.JComboBox selecionarCampeonato;
    private javax.swing.JComboBox selecionarEquipe;
    // End of variables declaration//GEN-END:variables
}
